openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'IoT Appliance registration'
  description: Register your IoT appliances

paths:
  /appliances:
    get:
      summary: List appliances
      responses:
        '200':
          description: A page of Appliance objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplianceCollection'
    post:
      summary: Create an appliance
      responses:
        '200':
          description: The appliance was created
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appliances/{applianceId}:
    parameters:
      - name: applianceId
        description: The unique identifier of the appliance
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
    get:
      summary: Read a appliance
      responses:
        '200':
          description: The appliance corresponding to the provided `applianceId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appliance'
        404:
          description: No applianceId found for the provided `applianceId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update an appliance
      responses:
        '200':
          description: The appliance was updated
        404:
          description: No appliance found for the provided 'applianceId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete an appliance
      responses:
        '200':
          description: The appliance was deleted
        404:
          description: No appliance found fyor the provided 'applianceId'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appliances/{applianceId}/commands:
    parameters:
      - name: applianceId
        description: The unique identifier of the appliance
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'

    get:
      summary: List commands
      responses:
        '200':
          description: A page of command objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a command
      responses:
        '202':
          description: The commond was accepted for processing
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appliances/{applianceId}/commands/{commandId}:
    parameters:
    - name: applianceId
      description: The unique identifier of the appliance
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Id'
    - name: commandId
      description: The unique identifier of the command
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Id'

    get:
      summary: Read a command
      responses:
        '200':
          description: The command corresponding to the provided `commandId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        404:
          description: No Command found for the provided `commandId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
components:
  schemas:
    Id:
      description: The unique identifier for all system resources
      type: string
    Appliance:
      type: object
      required:
        - id
        - name
        - type
        - status
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
        type:
          type: string
          enum:
            - Set top box
            - Lightbulb
            - Smoke detector
        createdAt:
          type: string
          format: date-time
    ApplianceCollection:
      description: A collection of Appliances
      type: array
      items:
          $ref: '#/components/schemas/Appliance'
    Command:
      type: object
      required:
        - id
        - type
        - status
        - createdAt
        - log
      properties:
        id:
          $ref: '#components/schemas/Id'
        type:
          type: string
          enum:
            - Reboot
        status:
          type: string
          enum:
            - Pending
            - Exeucting
            - Failed
            - Succeeded
        createdAt:
          type: string
          format: date-time
        log:
          type: string
          format: uri

    CommandCollection:
      description: A collection of commands issued to an appliance
      type: array
      items:
        $ref: '#/components/schemas/Command'
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []